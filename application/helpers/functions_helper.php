<?php 
	function ConvertToThaiDate ($date,$short) {
		
		if($date=="0000-00-00 00:00:00"){
			return 'ไม่ระบุ';
		}else{
			if($date){
				
				if($short){
					$MONTH = array("", "ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค.");
				}else{
					$MONTH = array(1=>"มกราคม","กุมภาพันธ์","มีนาคม","เมษายน","พฤษภาคม","มิถุนายน","กรกฎาคม","สิงหาคม","กันยายน","ตุลาคม","พฤศจิกายน","ธันวาคม");
				}
				$strYear = date("Y",strtotime($date))+543;
				$strMonth= date("n",strtotime($date));
				$strDay= date("j",strtotime($date));
				$strHour= date("H",strtotime($date));
				$strMinute= date("i",strtotime($date));
				$strSeconds= date("s",strtotime($date));
				
				$strMonthThai=$MONTH[$strMonth];
				return "$strDay $strMonthThai $strYear";
				$dt = explode("-", $date);
				$tyear = $dt[0];
				$dt[0] = $dt[2] +0;
				$dt[1] = $MONTH[$dt[1]+0];
				$dt[2] = $tyear+543;
				///return join(" ", $dt);
			}else{
				return "<font color=\"#FF0000\">ไม่ระบุ</font>";
			}	
		}
	}
	
	function ConvertToThaiDate_pdf ($date,$short) {
		
		if($date=="0000-00-00 00:00:00"){
			return 'ไม่ระบุ';
		}else{
			if($date){
				if($short){
					$MONTH = array("", "ม.ค.","ก.พ.","มี.ค.","เม.ย.","พ.ค.","มิ.ย.","ก.ค.","ส.ค.","ก.ย.","ต.ค.","พ.ย.","ธ.ค.");
				}else{
					$MONTH = array(1=>"มกราคม","กุมภาพันธ์","มีนาคม","เมษายน","พฤษภาคม","มิถุนายน","กรกฎาคม","สิงหาคม","กันยายน","ตุลาคม","พฤศจิกายน","ธันวาคม");
				}
				$dt = explode("-", $date);
				$tyear = $dt[0];
				$dt[0] = 'วันที่ '.($dt[2] +0);
				$dt[1] = 'เดือน '.($MONTH[$dt[1]+0]);
				$dt[2] = 'พ.ศ. '.($tyear+543);
				return join(" ", $dt);
			}else{
				return "<font color=\"#FF0000\">ไม่ระบุ</font>";
			}	
		}
	}
	
	function getMonth($i){
		$MONTH = array(1=>"มกราคม","กุมภาพันธ์","มีนาคม","เมษายน","พฤษภาคม","มิถุนายน","กรกฎาคม","สิงหาคม","กันยายน","ตุลาคม","พฤศจิกายน","ธันวาคม");
		return $MONTH[$i];
	}
	
	function ConvertToThaiDateInt($date){
		$dt = explode("-", $date);
		return substr($date,8,2).'/'.substr($date,5,2).'/'.(substr($date,0,4) +543);
	}
	
	function txtDescription($txt,$shot){
		return strip_tags(mb_substr($txt,0,$shot,'utf-8'));
		
	}
	
	function addhttp($url) {
		if (!preg_match("~^(?:f|ht)tps?://~i", $url)) {
			$url = "http://" . $url;
		}
		return $url;
	}
	
	function rmComma($number){
		return  str_replace(',', '', $number);
	}
	
	function getTopicFile($key){
		$ar = array(
			'pre_1_0'	=> 'ข้อเสนอโครงการ',
			'pre_2_0'	=> 'ขอรับมอบอำนาจการดำเนินโครงการจากมหาวิทยาลัยฯ',
			'pre_2_1'	=> 'โครงการดำเนินการผ่าน',
			'pre_2_2'	=> 'บันทึกข้อความ-ขอยื่นข้อเสนอโครงการ',
			'pre_2_3'	=> 'หนังสือมอบอำนาจ',
			'pre_2_4'	=> 'VAT Form',
			'pre_2_5'	=> 'ข้อเสนอโครงการ (เอกสารแนบ)',
			'pre_3_0'	=> 'เอกสารรับมอบอำนาจจากมหาวิทยาลัยฯ',
			'pre_3_00'	=> 'นำส่งเอกสารที่ได้รับมอบอำนาจให้กับแหล่งทุน',
			'pre_3_1'	=> 'หนังสือตอบรับการเข้าร่วมโครงการ',
			'pre_3_2'	=> 'หนังสือมอบอำนาจและเอกสารของมหาวิทยาลัย (พ.ร.บ.จัดตั้งมช./สำเนาบัตรอธิการ/สำเนาบช./e-GP/สำเนาจดทะเบียนที่ปรึกษา ฯลฯ)',
			'pre_3_3'	=> 'ข้อเสนอโครงการฯและข้อเสนอราคา',
			'pre_4_0'	=> 'สัญญารับทุนโครงการ',
			'pre_4_1'	=> 'สัญญาดำเนินโครงการฯ ลงนามเรียบร้อยแล้วทุกฝ่าย',
			'pre_4_2'	=> 'บันทึกข้อความ-ขอนำโครงการมาบริหารจัดการเอง',
			'pre_4_3'	=> 'ดำเนินการตีตราสารเสียภาษีอากร (กรณีแหล่งทุนให้ดำเนินการ)',
			'doing_1_0'	=> 'รายงานความก้าวหน้าครั้งที่ 1',
			'doing_1_1'	=> 'หนังสือนำส่ง',
			'doing_1_2'	=> 'เล่มรายงาน ',
			'doing_1_3'	=> 'หนังสือขอเบิกเงิน ',
			'doing_1_4'	=> 'หลักฐานการโอนเงินงวดที่ 1 จากแหล่งทุน',
			'doing_1_5'	=> 'ใบเสร็จรับเงินงวดที่ 1 ',
			'doing_1_6'	=> 'นำส่งใบเสร็จรับเงินงวดที่ 1 ให้กับแหล่งทุน',
			'done_1_0'	=> 'ดำเนินการปิดโครงการ',
			'done_1_1'	=> 'บันทึกข้อความ',
			'done_1_1'	=> 'หนังสือนำส่งค่าบริหารโครงการ',
			'done_2_0'	=> 'ปิดโครงการ',
			'done_2_1'	=> 'หลักฐานการโอนเงินประกันผลงาน',
			'done_2_2'	=> 'ใบเสร็จรับเงินประกันผลงาน',
			'done_2_3'	=> 'นำส่งใบเสร็จรับเงินประกันผลงานให้กับแหล่งทุน',
		);
		
		return @$ar[$key]!=null ? $ar[$key]:'อัพโหลดเอกสาร';
	}
	
	function encode_date($date){
		if($date!='0000-00-00' || $date!=""){
			$dt = explode("-", $date);
			return $dt[2].'/'.$dt[1].'/'.($dt[0]+543);
		}else{
			return null;
		}
	}
	
	function decode_date($date=null){
		if($date!=null){
			$dt = explode("/", $date);
			return ($dt[2]-543).'-'.$dt[1].'-'.$dt[0];
		}else{
			return '0000-00-00';
		}
	}
	
	function getBankList(){
		$ar_bank = array(
			'001'	=> 'ธนาคารแห่งประเทศไทย',
			'002'	=> 'ธนาคารกรุงเทพ',
			'004'	=> 'ธนาคารกสิกรไทย',
			'006'	=> 'ธนาคารกรุงไทย',
			'011'	=> 'ธนาคารทหารไทย',
			'014'	=> 'ธนาคารไทยพาณิชย์',
			'025'	=> 'ธนาคารกรุงศรีอยุธยา',
			'069'	=> 'ธนาคารเกียรตินาคิน',
			'022'	=> 'ธนาคารซีไอเอ็มบีไทย',
			'067'	=> 'ธนาคารทิสโก้',
			'065'	=> 'ธนาคารธนชาต',
			'024'	=> 'ธนาคารยูโอบี',
			'071'	=> 'ธนาคารไทยเครดิตเพื่อรายย่อย',
			'073'	=> 'ธนาคารแลนด์ แอนด์ เฮาส์',
			'070'	=> 'ธนาคารไอซีบีซี (ไทย)',
			'098'	=> 'ธนาคารพัฒนาวิสาหกิจขนาดกลางและขนาดย่อมแห่งประเทศไทย',
			'034'	=> 'ธนาคารเพื่อการเกษตรและสหกรณ์การเกษตร',
			'035'	=> 'ธนาคารเพื่อการส่งออกและนำเข้าแห่งประเทศไทย',
			'030'	=> 'ธนาคารออมสิน',
			'033'	=> 'ธนาคารอาคารสงเคราะห์',
			'066'	=> 'ธนาคารอิสลามแห่งประเทศไทย',
		);
		return $ar_bank;
	}
	
	function getAccountCat($id=null){
		$ar = array(
			'1'	=>'ค่าตอบแทน',
			'2'	=>'ค่าจ้าง',
			'3'	=>'ค่าวัสดุ',
			'4'	=>'ค่าเดินทาง',
			'5'	=>'ค่าที่พัก',
			'6'	=>'ค่าอาหาร',
			'7'	=>'ค่าครุภัณฑ์',
			'8'	=>'ค่าบำรุงสถาบัน',
			'9'	=>'อื่น ๆ',
		);
		return $id!=null ? $ar[$id]:$ar;
	}
	
	function getProjectStatus($type=null){
		$ar = array(
			'pre'	=>'ระหว่างยื่นข้อเสนอ',
			'doing'	=>'กำลังดำเนินการ',
			'done'	=>'ดำเนินการเสร็จแล้ว',
			'research'	=>'งานบริการวิชาการ และอื่น ๆ',
			'notbudget'	=>'ไม่ได้รับงบประมาณ',
		);
		return $type!=null ? $ar[$type]:$ar;
	}
	
	function getProjectStatusL($type=null){
		$ar = array(
			'1'	=>'ส่งข้อเสนอโครงการ',
			'2'	=>'กำลังดำเนินงาน',
			'3'	=>'ปิดโครงการ',
		);
		return $type!=null ? $ar[$type]:$ar;
	}
	
	function VBNamePoint($type, $point){
		$ar = array(
			'tver' => array(
				'CR_1'	=> 'ผู้พัฒนาโครงการแจ้งความต้องการในการรับบริการตรวจสอบความใช้ได้ และหรือการทวนสอบก๊าซเรือนกระจกระดับโครงการ',
				'CR_2'	=> 'ติดต่อประสานงานและขอข้อมูลเบื้องต้น',
				'CR_3'	=> 'จัดประชุมเพื่อทบทวนข้อมูล/ประเมินความเสี่ยงในการรับงาน',
				'CR_4'	=> 'ติดต่อผู้พัฒนาโครงการกรณีไม่รับงาน เพื่อออกหนังสือปฏิเสธงาน',
				'CR_5'	=> 'เสนองานและราคาให้แก่ลูกค้า',
				'CR_6'	=> 'ติดตามการชำระค่าบริการตรวจสอบความใช้ได้และ/หรือการทวนสอบจากลูกค้า',
				'CR_7'	=> 'กรณีมีการอุทธรณ์/ร้องเรียนจากลูกค้า',
				'CR_8'	=> 'แบบประเมินความพึงพอใจลูกค้า',
				'VD_1'	=> 'การวิเคราะห์กลยุทธ์และประเมินความเสี่ยงเพื่อวางแผนการตรวจ (SARA)',
				'VD_2'	=> 'การกำหนดแผนการสุ่มข้อมูล (Sampling plan) และกำหนดการตรวจสอบความใช้ได้และ/หรือการทวนสอบก๊าซเรือนกระจกระดับโครงการ',
				'VD_3'	=> 'ดำเนินการตรวจสอบความใช้ได้และ/หรือการทวนสอบก๊าซเรือนกระจกระดับโครงการ',
				'VD_4'	=> 'รายงานผลการตรวจสอบความใช้ได้และ/หรือการทวนสอบก๊าซเรือนกระจกระดับโครงการ',
				'VD_5'	=> 'นำส่งผลการตรวจสอบความใช้ได้และ/หรือการทวนสอบให้กับองค์การบริหารจัดการก๊าซเรือนกระจก (อบก.)',
			),
			'cfo' => array(
				'CR_1'	=> 'ลูกค้า/องค์กรแจ้งความต้องการในการรับบริการทวนสอบก๊าซเรือนกระจก',
				'CR_2'	=> 'ติดต่อประสานงานและขอข้อมูลเบื้องต้น',
				'CR_3'	=> 'จัดประชุมเพื่อทบทวนข้อมูล/ประเมินความเสี่ยงในการรับงาน',
				'CR_4'	=> 'ติดต่อผู้พัฒนาโครงการกรณีไม่รับงาน เพื่อออกหนังสือปฏิเสธงาน',
				'CR_5'	=> 'เสนองานและราคาให้แก่ลูกค้า',
				'CR_6'	=> 'ติดตามการชำระค่าทวนสอบจากลูกค้า',
				'CR_7'	=> 'กรณีมีการอุทธรณ์/ร้องเรียนจากลูกค้า',
				'CR_8'	=> 'แบบประเมินความพึงพอใจลูกค้า',
				'VD_1'	=> 'การวิเคราะห์กลยุทธ์และประเมินความเสี่ยงเพื่อวางแผนการตรวจ (SARA)',
				'VD_2'	=> 'การกำหนดแผนการสุ่มข้อมูล (Sampling plan) และกำหนดการทวนสอบ',
				'VD_3'	=> 'ดำเนินการทวนสอบก๊าซเรือนกระจกระดับองค์กร',
				'VD_4'	=> 'รายงานผลการทวนสอบ/ถ้อยแถลงการทวนสอบ/แจงการมีส่วนได้ส่วนเสีย',
				'VD_5'	=> 'นำส่งผลการทวนสอบให้กับ องค์การบริหารจัดการก๊าซเรือนกระจก (อบก.)',
			)
		);
		return $ar[$type][$point];
	}
	
	function getVBFileCount($obj, $point){
		$c = 0;
		foreach($obj as $item){
			if($item->file_point==$point){
				$c++;
			}
		}
		return $c;
	}
	
	function getVBFileList($rsTverFilePoint, $rsVBFile , $set_point){
		$ar_point = array();
		$val = '';
		foreach($rsTverFilePoint as $point){
			if($point->set_point == $set_point){
				if($point->set_data){
					$ar_point = json_decode($point->set_data);
				}
			}
		}
		foreach($rsVBFile as $files){
			if(in_array($files->doc_id, $ar_point)){
				$val .='<a href="/uploads/'.$files->doc_file.'" class="btn btn-gradient-secondary btn-sm mr-1" title="'.$files->doc_name.'"><i class="mdi mdi-attachment"></i></a>';
			}
		}
		echo $val;
	}
?>